// https://www.chessprogramming.org/Perft
// https://www.chessprogramming.org/Perft_Results


#[derive(Debug)]
pub struct PerftCounts {
    nodes: i64,
    captures: i64,
    en_passants: i64,
    castles: i64,
    promotions: i64,
    checks: i64,
    discovered_checks: i64,
    double_checks: i64,
    checkmates: i64,
}

#[derive(Debug)]
pub struct PerftResult {
    fen: &'static str,
    depth: u64,
    seconds: f64,
    counts: PerftCounts,
}

pub const FENS: [&str; 7] = [
    "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",
    "r3k2r/p1ppqpb1/bn2pnp1/3PN3/1p2P3/2N2Q1p/PPPBBPPP/R3K2R w KQkq - 0 1",  // Kiwipete
    "8/2p5/3p4/KP5r/1R3p1k/8/4P1P1/8 w - - 0 1",
    "r3k2r/Pppp1ppp/1b3nbN/nP6/BBP1P3/q4N2/Pp1P2PP/R2Q1RK1 w kq - 0 1",
    "r2q1rk1/pP1p2pp/Q4n2/bbp1p3/Np6/1B3NBn/pPPP1PPP/R3K2R b KQ - 0 1",  // Mirrored from above
    "rnbq1k1r/pp1Pbppp/2p5/8/2B5/8/PPP1NnPP/RNBQK2R w KQ - 0 1",
    "r4rk1/1pp1qppp/p1np1n2/2b1p1B1/2B1P1b1/P1NP1N2/1PP1QPPP/R4RK1 w - - 0 1",
];

pub const EXPECTED: [(&str, u64, [i64; 9]); 55] = [
                                    // nodes         captures  en_passants        castles  promotions          checks  discovered     double   checkmates
    (FENS[0], 0,  [                        0,               0,           0,             0,          0,              0,          0,         0,           0]),
    (FENS[0], 1,  [                       20,               0,           0,             0,          0,              0,          0,         0,           0]),
    (FENS[0], 2,  [                      400,               0,           0,             0,          0,              0,          0,         0,           0]),
    (FENS[0], 3,  [                    8_902,              34,           0,             0,          0,             12,          0,         0,           0]),
    (FENS[0], 4,  [                  197_281,           1_576,           0,             0,          0,            469,          0,         0,           8]),
    (FENS[0], 5,  [                4_865_609,          82_719,         258,             0,          0,         27_351,          6,         0,         347]),
    (FENS[0], 6,  [              119_060_324,       2_812_008,       5_248,             0,          0,        809_099,        329,        46,      10_828]),
    (FENS[0], 7,  [            3_195_901_860,     108_329_926,     319_617,        88_453,          0,     33_103_848,     18_026,     1_628,     435_767]),
    (FENS[0], 8,  [           84_998_987_956,   3_523_740_106,   7_187_977,    23_605_205,          0,    968_981_593,    847_039,   157_215,   9_852_036]),
    (FENS[0], 9,  [        2_439_530_234_167, 125_208_536_153, 319_496_827, 1_784_356_000, 17_334_376, 36_095_901_903, 37_101_713, 5_547_231, 400_191_963]),
    (FENS[0], 10, [       69_352_859_712_417,              -1,          -1,            -1,         -1,             -1,         -1,        -1,          -1]),
    (FENS[0], 11, [    2_097_651_003_696_806,              -1,          -1,            -1,         -1,             -1,         -1,        -1,          -1]),
    (FENS[0], 12, [   62_854_969_236_701_747,              -1,          -1,            -1,         -1,             -1,         -1,        -1,          -1]),
    (FENS[0], 13, [1_981_066_775_000_396_239,              -1,          -1,            -1,         -1,             -1,         -1,        -1,          -1]),
    // (FENS[0], 14, [61_885_021_521_585_529_237, -1, -1, -1, -1, -1, -1, -1, -1]),
    // (FENS[0], 15, [201_509_995_0053_364_471_960, -1, -1, -1, -1, -1, -1, -1, -1]),
    
    // The number of double-checks in depth 5 is discussed in Talkchess [8] and may be 2645 instead of 2637.
    (FENS[1], 1, [           48,             8,         0,           2,          0,          0,       0,      0,       0]),
    (FENS[1], 2, [        2_039,           351,         1,          91,          0,          3,       0,      0,       0]),
    (FENS[1], 3, [       97_862,        17_102,        45,       3_162,          0,        993,       0,      0,       1]),
    (FENS[1], 4, [    4_085_603,       757_163,     1_929,     128_013,     15_172,     25_523,      42,      6,      43]),
    (FENS[1], 5, [  193_690_690,    35_043_416,    73_365,   4_993_637,      8_392,  3_309_887,  19_883,  2_637,  30_171]),
    (FENS[1], 6, [8_031_647_685, 1_558_445_089, 3_577_504, 184_513_607, 56_627_920, 92_238_050, 568_417, 54_948, 360_003]),

    (FENS[2], 1, [           14,           1,         0, 0,         0,           2,         0,     0,       0]),
    (FENS[2], 2, [          191,          14,         0, 0,         0,          10,         0,     0,       0]),
    (FENS[2], 3, [        2_812,         209,         2, 0,         0,         267,         3,     0,       0]),
    (FENS[2], 4, [       43_238,       3_348,       123, 0,         0,       1_680,       106,     0,      17]),
    (FENS[2], 5, [      674_624,      52_051,     1_165, 0,         0,      52_950,     1_292,     3,       0]),
    (FENS[2], 6, [   11_030_083,     940_350,    33_325, 0,     7_552,     452_473,    26_067,     0,   2_733]),
    (FENS[2], 7, [  178_633_661,  14_519_036,   294_874, 0,   140_024,  12_797_406,    37_630, 3_612,      87]),
    (FENS[2], 8, [3_009_794_393, 267_586_558, 8_009_239, 0, 6_578_076, 135_626_805, 7_181_487, 1_630, 450_410]),

    (FENS[3], 1, [          6,           0,     0,          0,          0,          0, -1, -1,      0]),
    (FENS[3], 2, [        264,          87,     0,          6,         48,         10, -1, -1,      0]),
    (FENS[3], 3, [      9_467,       1_021,     4,          0,        120,         38, -1, -1,     22]),
    (FENS[3], 4, [    422_333,     131_393,     0,      7_795,     60_032,     15_492, -1, -1,      5]),
    (FENS[3], 5, [ 15_833_292,   2_046_173, 6_512,          0,    329_464,    200_568, -1, -1, 50_562]),
    (FENS[3], 6, [706_045_033, 210_369_132,   212, 10_882_006, 81_102_984, 26_973_664, -1, -1, 81_076]),

    // Mirrored from above
    (FENS[4], 1, [          6,           0,     0,          0,          0,          0, -1, -1,      0]),
    (FENS[4], 2, [        264,          87,     0,          6,         48,         10, -1, -1,      0]),
    (FENS[4], 3, [      9_467,       1_021,     4,          0,        120,         38, -1, -1,     22]),
    (FENS[4], 4, [    422_333,     131_393,     0,      7_795,     60_032,     15_492, -1, -1,      5]),
    (FENS[4], 5, [ 15_833_292,   2_046_173, 6_512,          0,    329_464,    200_568, -1, -1, 50_562]),
    (FENS[4], 6, [706_045_033, 210_369_132,   212, 10_882_006, 81_102_984, 26_973_664, -1, -1, 81_076]),

    (FENS[5], 1, [        44, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[5], 2, [     1_486, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[5], 3, [    62_379, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[5], 4, [ 2_103_487, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[5], 5, [89_941_194, -1, -1, -1, -1, -1, -1, -1, -1]),

    (FENS[6], 0, [                  1, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[6], 1, [                 46, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[6], 2, [              2_079, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[6], 3, [             89_890, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[6], 4, [          3_894_594, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[6], 5, [        164_075_551, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[6], 6, [      6_923_051_137, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[6], 7, [    287_188_994_746, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[6], 8, [ 11_923_589_843_526, -1, -1, -1, -1, -1, -1, -1, -1]),
    (FENS[6], 9, [490_154_852_788_714, -1, -1, -1, -1, -1, -1, -1, -1]),
];
